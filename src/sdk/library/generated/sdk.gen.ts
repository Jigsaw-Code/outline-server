// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { GetServerData, GetServerResponse, PutServerHostnameForAccessKeysData, PutServerHostnameForAccessKeysResponse, PutServerPortForNewAccessKeysData, PutServerPortForNewAccessKeysResponse, DeleteServerAccessKeyDataLimitData, DeleteServerAccessKeyDataLimitResponse, PutServerAccessKeyDataLimitData, PutServerAccessKeyDataLimitResponse, GetExperimentalServerMetricsData, GetExperimentalServerMetricsResponse, PutNameData, PutNameResponse, GetAccessKeysData, GetAccessKeysResponse, PostAccessKeysData, PostAccessKeysResponse, DeleteAccessKeysByIdData, DeleteAccessKeysByIdResponse, DeleteAccessKeysByIdError, GetAccessKeysByIdData, GetAccessKeysByIdResponse, GetAccessKeysByIdError, PutAccessKeysByIdData, PutAccessKeysByIdResponse, PutAccessKeysByIdNameData, PutAccessKeysByIdNameResponse, DeleteAccessKeysByIdDataLimitData, DeleteAccessKeysByIdDataLimitResponse, PutAccessKeysByIdDataLimitData, PutAccessKeysByIdDataLimitResponse, GetMetricsTransferData, GetMetricsTransferResponse, GetMetricsEnabledData, GetMetricsEnabledResponse, PutMetricsEnabledData, PutMetricsEnabledResponse, DeleteExperimentalAccessKeyDataLimitData, DeleteExperimentalAccessKeyDataLimitResponse, PutExperimentalAccessKeyDataLimitData, PutExperimentalAccessKeyDataLimitResponse } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Returns information about the server
 */
export const getServer = <ThrowOnError extends boolean = false>(options?: Options<GetServerData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetServerResponse, unknown, ThrowOnError>({
        url: '/server',
        ...options
    });
};

/**
 * Changes the hostname for access keys.  Must be a valid hostname or IP address.  If it's a hostname, DNS must be set up independently of this API.
 */
export const putServerHostnameForAccessKeys = <ThrowOnError extends boolean = false>(options: Options<PutServerHostnameForAccessKeysData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutServerHostnameForAccessKeysResponse, unknown, ThrowOnError>({
        url: '/server/hostname-for-access-keys',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Changes the default port for newly created access keys.  This can be a port already used for access keys.
 */
export const putServerPortForNewAccessKeys = <ThrowOnError extends boolean = false>(options: Options<PutServerPortForNewAccessKeysData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutServerPortForNewAccessKeysResponse, unknown, ThrowOnError>({
        url: '/server/port-for-new-access-keys',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Removes the access key data limit, lifting data transfer restrictions on all access keys.
 */
export const deleteServerAccessKeyDataLimit = <ThrowOnError extends boolean = false>(options?: Options<DeleteServerAccessKeyDataLimitData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteServerAccessKeyDataLimitResponse, unknown, ThrowOnError>({
        url: '/server/access-key-data-limit',
        ...options
    });
};

/**
 * Sets a data transfer limit for all access keys
 */
export const putServerAccessKeyDataLimit = <ThrowOnError extends boolean = false>(options: Options<PutServerAccessKeyDataLimitData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutServerAccessKeyDataLimitResponse, unknown, ThrowOnError>({
        url: '/server/access-key-data-limit',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const getExperimentalServerMetrics = <ThrowOnError extends boolean = false>(options?: Options<GetExperimentalServerMetricsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetExperimentalServerMetricsResponse, unknown, ThrowOnError>({
        url: '/experimental/server/metrics',
        ...options
    });
};

/**
 * Renames the server
 */
export const putName = <ThrowOnError extends boolean = false>(options: Options<PutNameData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutNameResponse, unknown, ThrowOnError>({
        url: '/name',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Lists the access keys
 */
export const getAccessKeys = <ThrowOnError extends boolean = false>(options?: Options<GetAccessKeysData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetAccessKeysResponse, unknown, ThrowOnError>({
        url: '/access-keys',
        ...options
    });
};

/**
 * Creates a new access key
 */
export const postAccessKeys = <ThrowOnError extends boolean = false>(options?: Options<PostAccessKeysData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostAccessKeysResponse, unknown, ThrowOnError>({
        url: '/access-keys',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Deletes an access key
 */
export const deleteAccessKeysById = <ThrowOnError extends boolean = false>(options: Options<DeleteAccessKeysByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAccessKeysByIdResponse, DeleteAccessKeysByIdError, ThrowOnError>({
        url: '/access-keys/{id}',
        ...options
    });
};

/**
 * Get an access key
 */
export const getAccessKeysById = <ThrowOnError extends boolean = false>(options: Options<GetAccessKeysByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccessKeysByIdResponse, GetAccessKeysByIdError, ThrowOnError>({
        url: '/access-keys/{id}',
        ...options
    });
};

/**
 * Creates a new access key with a specific identifer
 */
export const putAccessKeysById = <ThrowOnError extends boolean = false>(options: Options<PutAccessKeysByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutAccessKeysByIdResponse, unknown, ThrowOnError>({
        url: '/access-keys/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Renames an access key
 */
export const putAccessKeysByIdName = <ThrowOnError extends boolean = false>(options: Options<PutAccessKeysByIdNameData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutAccessKeysByIdNameResponse, unknown, ThrowOnError>({
        url: '/access-keys/{id}/name',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Removes the data limit on the given access key.
 */
export const deleteAccessKeysByIdDataLimit = <ThrowOnError extends boolean = false>(options: Options<DeleteAccessKeysByIdDataLimitData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAccessKeysByIdDataLimitResponse, unknown, ThrowOnError>({
        url: '/access-keys/{id}/data-limit',
        ...options
    });
};

/**
 * Sets a data limit for the given access key
 */
export const putAccessKeysByIdDataLimit = <ThrowOnError extends boolean = false>(options: Options<PutAccessKeysByIdDataLimitData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutAccessKeysByIdDataLimitResponse, unknown, ThrowOnError>({
        url: '/access-keys/{id}/data-limit',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Returns the data transferred per access key
 */
export const getMetricsTransfer = <ThrowOnError extends boolean = false>(options?: Options<GetMetricsTransferData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetMetricsTransferResponse, unknown, ThrowOnError>({
        url: '/metrics/transfer',
        ...options
    });
};

/**
 * Returns whether metrics is being shared
 */
export const getMetricsEnabled = <ThrowOnError extends boolean = false>(options?: Options<GetMetricsEnabledData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetMetricsEnabledResponse, unknown, ThrowOnError>({
        url: '/metrics/enabled',
        ...options
    });
};

/**
 * Enables or disables sharing of metrics
 */
export const putMetricsEnabled = <ThrowOnError extends boolean = false>(options: Options<PutMetricsEnabledData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutMetricsEnabledResponse, unknown, ThrowOnError>({
        url: '/metrics/enabled',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * @deprecated
 * (Deprecated) Removes the access key data limit, lifting data transfer restrictions on all access keys.
 */
export const deleteExperimentalAccessKeyDataLimit = <ThrowOnError extends boolean = false>(options?: Options<DeleteExperimentalAccessKeyDataLimitData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteExperimentalAccessKeyDataLimitResponse, unknown, ThrowOnError>({
        url: '/experimental/access-key-data-limit',
        ...options
    });
};

/**
 * @deprecated
 * (Deprecated) Sets a data transfer limit for all access keys
 */
export const putExperimentalAccessKeyDataLimit = <ThrowOnError extends boolean = false>(options: Options<PutExperimentalAccessKeyDataLimitData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutExperimentalAccessKeyDataLimitResponse, unknown, ThrowOnError>({
        url: '/experimental/access-key-data-limit',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};